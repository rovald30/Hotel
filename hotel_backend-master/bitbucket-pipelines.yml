image: gradle:jdk17-alpine

definitions:
  services:
    docker:
      image: docker:dind

pipelines:
  pull-requests:
    '**':
      - step:
          caches:
            - gradle
          runs-on:
            - self.hosted
            - linux
          services:
            - docker
          name: Build and Test
          script:
            - ./gradlew build
  branches:
    master:
      - step:
          runs-on:
            - self.hosted
            - linux
          services:
            - docker
          name: Build
          caches:
            - gradle
          script:
            - ./gradlew build
          artifacts:
            - build/libs/*-SNAPSHOT.jar
      - step:
          name: Push to Docker Hub
          runs-on:
            - self.hosted
            - linux
          services:
            - docker
          script:
            - export IMAGE_NAME="${DOCKER_HUB_USER}/${BITBUCKET_REPO_SLUG}:latest"
            - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
            - docker build -t "$IMAGE_NAME" .
            - docker push "$IMAGE_NAME"
      - step:
          name: Deploy Docker Image on AWS EC2
          runs-on:
            - self.hosted
            - linux
          script:
            - pipe: atlassian/ssh-run:0.4.1
              variables:
                SSH_USER: $SSH_USER_PROD
                SERVER: $SERVER_IP_PROD
                MODE: 'command'
                COMMAND: './deploy-to-prod.sh'
    dev:
      - step:
          runs-on:
            - self.hosted
            - linux
          services:
            - docker
          name: Build
          caches:
            - gradle
          script:
            - ./gradlew build
          artifacts:
            - build/libs/*-SNAPSHOT.jar
      - step:
          name: Push to Docker Hub
          runs-on:
            - self.hosted
            - linux
          services:
            - docker
          script:
            - export IMAGE_NAME="${DOCKER_HUB_USER}/dev_${BITBUCKET_REPO_SLUG}:latest"
            - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
            - docker build -t "$IMAGE_NAME" .
            - docker push "$IMAGE_NAME"
      - step:
          name: Deploy Docker Image on AWS EC2
          runs-on:
            - self.hosted
            - linux
          script:
            - pipe: atlassian/ssh-run:0.4.1
              variables:
                SSH_USER: $SSH_USER_DEV
                SERVER: $SERVER_IP_DEV
                MODE: 'command'
                COMMAND: './deploy-to-dev.sh'